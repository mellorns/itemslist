{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setItem } from \"../../Redux/items-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId - 1;\n      this.props.setItem(itemId);\n    };\n  }\n\n  componentDidMount() {\n    this.getItemId();\n  } // componentDidUpdate(prevProps, prevState, snapshot) {\n  //     if(prevProps !== this.props){\n  //         this.getItemId()\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AddInformation, {\n        imgUrl: this.props.item.imgUrl,\n        name: this.props.item.name,\n        description: this.props.item.description,\n        collar: this.props.item.collar,\n        size: this.props.item.size,\n        weight: this.props.item.weight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  imgUrl: state.itemsPage.items.imageUrl,\n  name: state.itemsPage.items.name,\n  description: state.itemsPage.items.description,\n  collar: state.itemsPage.items.collar,\n  size: state.itemsPage.items.size,\n  weight: state.itemsPage.items.weight,\n  items: state.itemsPage.items,\n  item: state.itemsPage.item\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","AddInformation","withRouter","compose","setItem","AddInformationContainer","Component","getItemId","itemId","props","match","params","componentDidMount","render","item","imgUrl","name","description","collar","size","weight","mapStateToProps","state","itemsPage","items","imageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;;AAEA,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,SAA5C,CAAsD;AAAA;AAAA;;AAAA,SAIlDC,SAJkD,GAItC,MAAM;AACd,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,GAAiC,CAA9C;AACA,WAAKC,KAAL,CAAWL,OAAX,CAAmBI,MAAnB;AAEH,KARiD;AAAA;;AASlDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL;AACH,GAXiD,CAYlD;AACA;AACA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AACN,wBACI;AAAA,6BAEK,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,MAAxC;AACgB,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWK,IAAX,CAAgBE,IADtC;AAEgB,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWK,IAAX,CAAgBG,WAF7C;AAGgB,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWK,IAAX,CAAgBI,MAHxC;AAIgB,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWK,IAAX,CAAgBK,IAJtC;AAKgB,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWK,IAAX,CAAgBM;AALxC;AAAA;AAAA;AAAA;AAAA;AAFL,qBADJ;AAYH;;AA/BkD;;AAkCtD,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,MAAM,EAAEO,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,QADE;AAEhCT,EAAAA,IAAI,EAAEM,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBR,IAFI;AAGhCC,EAAAA,WAAW,EAAEK,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBP,WAHH;AAIhCC,EAAAA,MAAM,EAAEI,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBN,MAJE;AAKhCC,EAAAA,IAAI,EAAEG,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBL,IALI;AAMhCC,EAAAA,MAAM,EAAEE,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBJ,MANE;AAOhCI,EAAAA,KAAK,EAAEF,KAAK,CAACC,SAAN,CAAgBC,KAPS;AAQhCV,EAAAA,IAAI,EAAEQ,KAAK,CAACC,SAAN,CAAgBT;AARU,CAAZ,CAAxB;;AAaA,eAAeX,OAAO,CAACH,OAAO,CAACqB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAR,EAClBF,UADkB,CAAP,CACCG,uBADD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {setItem} from \"../../Redux/items-reducer\";\n\nclass AddInformationContainer extends React.Component {\n\n\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId - 1\n        this.props.setItem(itemId)\n\n    }\n    componentDidMount() {\n        this.getItemId()\n    }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(prevProps !== this.props){\n    //         this.getItemId()\n    //     }\n    // }\n\n    render() {\n       return(\n           <>\n\n                <AddInformation imgUrl={this.props.item.imgUrl}\n                                name={this.props.item.name}\n                                description={this.props.item.description}\n                                collar={this.props.item.collar}\n                                size={this.props.item.size}\n                                weight={this.props.item.weight}\n                />\n           </>\n       )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    imgUrl: state.itemsPage.items.imageUrl,\n    name: state.itemsPage.items.name,\n    description: state.itemsPage.items.description,\n    collar: state.itemsPage.items.collar,\n    size: state.itemsPage.items.size,\n    weight: state.itemsPage.items.weight,\n    items: state.itemsPage.items,\n    item: state.itemsPage.item,\n})\n\n\n\nexport default compose(connect(mapStateToProps, {setItem}),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}