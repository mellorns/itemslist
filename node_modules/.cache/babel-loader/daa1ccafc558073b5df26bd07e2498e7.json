{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport Item from \"./Items/Item\";\nimport React, { useEffect, useState } from \"react\";\nimport s from './MainPage.module.css';\nimport './AddProductForm/AddProductForm.css';\nimport { AddProductReduxForm } from \"./AddProductForm/AddProductForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  items,\n  deleteItem,\n  addItem\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('');\n  const [isAddFormOpen, setIsAddFormOpen] = useState(false);\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        name: 'name',\n        count: 'count'\n      };\n      let sortProperty = types[type];\n\n      if (sortProperty === 'name') {\n        const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n        setData(sorted);\n      } else if (sortProperty === 'count') {\n        const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty]);\n        setData(sorted);\n      } else {\n        return null;\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  useEffect(() => {\n    setData(items);\n  }, [items]);\n\n  const ModalOn = () => {\n    setIsAddFormOpen(true);\n  };\n\n  const onSubmit = formData => {\n    addItem(formData);\n    setIsAddFormOpen(false);\n  };\n\n  const closeModal = () => {\n    setIsAddFormOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.addProductButton,\n      onClick: ModalOn,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: s.selectMode,\n      onChange: e => setSortType(e.currentTarget.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sort\",\n        children: \"Sort By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"count\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      id: item.id,\n      imageUrl: item.imageUrl,\n      count: item.count,\n      name: item.name,\n      size: item.size,\n      weight: item.weight,\n      deleteItem: deleteItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this)), isAddFormOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: closeModal,\n            className: \"close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(AddProductReduxForm, {\n            onSubmit: onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"NSvSKrUx/KlwIqngllZR+zS3y2k=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.tsx"],"names":["Item","React","useEffect","useState","s","AddProductReduxForm","MainPage","items","deleteItem","addItem","data","setData","sortType","setSortType","isAddFormOpen","setIsAddFormOpen","sortArray","type","types","name","count","sortProperty","sorted","sort","a","b","localeCompare","ModalOn","onSubmit","formData","closeModal","addProductButton","selectMode","e","currentTarget","value","map","item","id","imageUrl","size","weight"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAO,qCAAP;AACA,SAAiCC,mBAAjC,QAA2D,iCAA3D;;;AAUA,MAAMC,QAAqC,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAAA;;AAE5E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAkB,EAAlB,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAU,KAAV,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAYZ,UAAMc,SAAS,GAAIC,IAAD,IAAkB;AAEhC,YAAMC,KAAc,GAAG;AACnBC,QAAAA,IAAI,EAAE,MADa;AAEnBC,QAAAA,KAAK,EAAE;AAFY,OAAvB;AAIA,UAAIC,YAAY,GAAGH,KAAK,CAACD,IAAD,CAAxB;;AACA,UAAII,YAAY,KAAK,MAArB,EAA6B;AACzB,cAAMC,MAAM,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,IAAF,CAAOO,aAAP,CAAqBD,CAAC,CAACN,IAAvB,CAA1B,CAAf;AACAR,QAAAA,OAAO,CAACW,MAAD,CAAP;AACH,OAHD,MAGO,IAAID,YAAY,KAAK,OAArB,EAA8B;AACjC,cAAMC,MAAM,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,YAAD,CAAD,GAAkBI,CAAC,CAACJ,YAAD,CAA7C,CAAf;AACAV,QAAAA,OAAO,CAACW,MAAD,CAAP;AACH,OAHM,MAGA;AACH,eAAO,IAAP;AACH;AACJ,KAhBD;;AAiBAN,IAAAA,SAAS,CAACJ,QAAD,CAAT;AACH,GA9BQ,EA8BN,CAACA,QAAD,CA9BM,CAAT;AA+BAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAGA,QAAMoB,OAAO,GAAG,MAAM;AAClBZ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMa,QAAQ,GAAIC,QAAD,IAAmB;AAChCpB,IAAAA,OAAO,CAACoB,QAAD,CAAP;AACAd,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAHD;;AAIA,QAAMe,UAAU,GAAG,MAAM;AACrBf,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAEX,CAAC,CAAC2B,gBAArB;AAAuC,MAAA,OAAO,EAAEJ,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAEvB,CAAC,CAAC4B,UAArB;AAAiC,MAAA,QAAQ,EAAGC,CAAD,IAAOpB,WAAW,CAACoB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAA7D;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOKzB,IAAI,CAAC0B,GAAL,CAASC,IAAI,iBAAI,QAAC,IAAD;AACM,MAAA,EAAE,EAAEA,IAAI,CAACC,EADf;AAEM,MAAA,QAAQ,EAAED,IAAI,CAACE,QAFrB;AAGM,MAAA,KAAK,EAAEF,IAAI,CAACjB,KAHlB;AAIM,MAAA,IAAI,EAAEiB,IAAI,CAAClB,IAJjB;AAKM,MAAA,IAAI,EAAEkB,IAAI,CAACG,IALjB;AAMM,MAAA,MAAM,EAAEH,IAAI,CAACI,MANnB;AAOM,MAAA,UAAU,EAAEjC;AAPlB,OAAW6B,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAPL,EAiBKxB,aAAa,iBACd;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAM,YAAA,OAAO,EAAEgB,UAAf;AAA2B,YAAA,SAAS,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAtFD;;GAAMtB,Q;;KAAAA,Q;AAyFN,eAAeA,QAAf","sourcesContent":["import Item from \"./Items/Item\";\nimport React, {useEffect, useState} from \"react\";\nimport s from './MainPage.module.css'\nimport './AddProductForm/AddProductForm.css'\nimport {AddProductFormValueType, AddProductReduxForm} from \"./AddProductForm/AddProductForm\";\nimport {itemType} from \"../../types/types\";\n\n\ntype MainPagePropsType = {\n    items: Array<itemType>,\n    deleteItem: (id: number) => void,\n    addItem: (formData: AddProductFormValueType) => void\n}\n\nconst MainPage: React.FC<MainPagePropsType> = ({items, deleteItem, addItem}) => {\n\n    const [data, setData] = useState<Array<itemType>>([])\n    const [sortType, setSortType] = useState<string>('')\n    const [isAddFormOpen, setIsAddFormOpen] = useState<boolean>(false)\n\n    useEffect(() => {\n\n\n        interface IObjectKeys {\n            [key: string]: string | number;\n        }\n\n        interface IDevice extends IObjectKeys {\n            name: string,\n            count: string\n        }\n\n        const sortArray = (type: string) => {\n\n            const types: IDevice = {\n                name: 'name',\n                count: 'count'\n            }\n            let sortProperty = types[type]\n            if (sortProperty === 'name') {\n                const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n                setData(sorted)\n            } else if (sortProperty === 'count') {\n                const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty])\n                setData(sorted)\n            } else {\n                return null\n            }\n        }\n        sortArray(sortType)\n    }, [sortType])\n    useEffect(() => {\n        setData(items)\n    }, [items])\n    const ModalOn = () => {\n        setIsAddFormOpen(true)\n    }\n    const onSubmit = (formData: any) => {\n        addItem(formData)\n        setIsAddFormOpen(false)\n    }\n    const closeModal = () => {\n        setIsAddFormOpen(false)\n    }\n    return (\n        <div>\n            <button className={s.addProductButton} onClick={ModalOn}>Add Product</button>\n            <select className={s.selectMode} onChange={(e) => setSortType(e.currentTarget.value)}>\n                <option value=\"sort\">Sort By:</option>\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n            {data.map(item => <Item key={item.id}\n                                    id={item.id}\n                                    imageUrl={item.imageUrl}\n                                    count={item.count}\n                                    name={item.name}\n                                    size={item.size}\n                                    weight={item.weight}\n                                    deleteItem={deleteItem}\n            />)}\n\n            {isAddFormOpen &&\n            <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span onClick={closeModal} className=\"close\">×</span>\n                        <h2>Add Product</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <AddProductReduxForm onSubmit={onSubmit}/>\n                    </div>\n                    <div className='modal-footer'>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    )\n}\n\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}