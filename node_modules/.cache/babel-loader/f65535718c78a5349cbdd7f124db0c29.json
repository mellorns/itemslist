{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setItem } from \"../../Redux/items-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId - 1;\n      let obj = this.props.items[itemId];\n      this.props.setItem(obj);\n    };\n  }\n\n  componentDidMount() {\n    this.getItemId();\n  } // componentDidUpdate(prevProps, prevState, snapshot) {\n  //     if(prevProps.item !== this.props.item){\n  //         this.getItemId()\n  //         console.log(this.props.item)\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.item && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // imgUrl: state.itemsPage.items.imageUrl,\n  // name: state.itemsPage.items.name,\n  // description: state.itemsPage.items.description,\n  // collar: state.itemsPage.items.collar,\n  // size: state.itemsPage.items.size,\n  // weight: state.itemsPage.items.weight,\n  item: state.itemsPage.item,\n  items: state.itemsPage.items\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","AddInformation","withRouter","compose","setItem","AddInformationContainer","Component","getItemId","itemId","props","match","params","obj","items","componentDidMount","render","item","name","mapStateToProps","state","itemsPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;;AAEA,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,SAA5C,CAAsD;AAAA;AAAA;;AAAA,SAIlDC,SAJkD,GAItC,MAAM;AACd,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,GAAgC,CAA7C;AACA,UAAII,GAAG,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBL,MAAjB,CAAV;AAIA,WAAKC,KAAL,CAAWL,OAAX,CAAmBQ,GAAnB;AACH,KAXiD;AAAA;;AAYlDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,SAAL;AACH,GAdiD,CAelD;AACA;AACA;AACA;AACA;AACA;;;AAEAQ,EAAAA,MAAM,GAAG;AACN,wBACI;AAAA,gBACK,KAAKN,KAAL,CAAWO,IAAX,iBAAqB;AAAA,kBACjB,KAAKP,KAAL,CAAWO,IAAX,CAAgBC;AADC;AAAA;AAAA;AAAA;AAAA;AAD1B,qBADJ;AAUH;;AAjCkD;;AAoCtD,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,IAAI,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,IAPU;AAQhCH,EAAAA,KAAK,EAAEM,KAAK,CAACC,SAAN,CAAgBP;AARS,CAAZ,CAAxB;;AAaA,eAAeV,OAAO,CAACH,OAAO,CAACkB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAR,EAClBF,UADkB,CAAP,CACCG,uBADD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {setItem} from \"../../Redux/items-reducer\";\n\nclass AddInformationContainer extends React.Component {\n\n\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId -1\n        let obj = this.props.items[itemId]\n\n\n\n        this.props.setItem(obj)\n    }\n    componentDidMount() {\n        this.getItemId()\n    }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(prevProps.item !== this.props.item){\n    //         this.getItemId()\n    //         console.log(this.props.item)\n    //     }\n    // }\n\n    render() {\n       return(\n           <>\n               {this.props.item &&   <div>\n                   {this.props.item.name}\n               </div>}\n\n                {/*<AddInformation item={this.props.item}*/}\n\n           </>\n       )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    // imgUrl: state.itemsPage.items.imageUrl,\n    // name: state.itemsPage.items.name,\n    // description: state.itemsPage.items.description,\n    // collar: state.itemsPage.items.collar,\n    // size: state.itemsPage.items.size,\n    // weight: state.itemsPage.items.weight,\n    item: state.itemsPage.item,\n    items: state.itemsPage.items,\n})\n\n\n\nexport default compose(connect(mapStateToProps, {setItem}),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}