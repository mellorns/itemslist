{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport Item from \"./Items/Item\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  items,\n  deleteItem\n}) => {\n  _s();\n\n  // let [state, setState] = useState([...items])\n  //\n  // const sortByName = () => {\n  //     debugger\n  //     state.sort(function (a, b) {\n  //         if (a.name > b.name) {\n  //             return 1\n  //         }\n  //         if (a.name < b.name) {\n  //             return -1\n  //         }\n  //         return 0\n  //     })\n  //   setState(state)\n  // }\n  const [data, setData] = useState([]);\n\n  const sortArray = type => {\n    const types = {\n      name: 'name',\n      count: 'count'\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => sortArray(e.currentTarget.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"count\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      id: item.id,\n      imageUrl: item.imageUrl,\n      count: item.count,\n      name: item.name,\n      size: item.size,\n      weight: item.weight,\n      deleteItem: deleteItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"ZhdFFZzxrIZ1AkLU34uuoZfaEnY=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js"],"names":["Item","useState","MainPage","items","deleteItem","data","setData","sortArray","type","types","name","count","e","currentTarget","value","map","item","id","imageUrl","size","weight"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,KAAwB;AAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;;AAGA,QAAMM,SAAS,GAAIC,IAAD,IAAU;AACxB,UAAMC,KAAK,GAAG;AACVC,MAAAA,IAAI,EAAE,MADI;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAKH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAQ,MAAA,QAAQ,EAAGC,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAlC;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKX,KAAK,CAACY,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AACM,MAAA,EAAE,EAAEA,IAAI,CAACC,EADf;AAEM,MAAA,QAAQ,EAAED,IAAI,CAACE,QAFrB;AAGM,MAAA,KAAK,EAAEF,IAAI,CAACL,KAHlB;AAIM,MAAA,IAAI,EAAEK,IAAI,CAACN,IAJjB;AAKM,MAAA,IAAI,EAAEM,IAAI,CAACG,IALjB;AAMM,MAAA,MAAM,EAAEH,IAAI,CAACI,MANnB;AAOM,MAAA,UAAU,EAAEhB;AAPlB,OAAWY,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAlB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA9CD;;GAAMf,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import Item from \"./Items/Item\";\nimport {useState} from \"react\";\n\nconst MainPage = ({items,deleteItem}) => {\n\n    // let [state, setState] = useState([...items])\n    //\n    // const sortByName = () => {\n    //     debugger\n    //     state.sort(function (a, b) {\n    //         if (a.name > b.name) {\n    //             return 1\n    //         }\n    //         if (a.name < b.name) {\n    //             return -1\n    //         }\n    //         return 0\n    //     })\n    //   setState(state)\n    // }\n\n    const [data,setData] = useState([])\n\n\n    const sortArray = (type) => {\n        const types = {\n            name: 'name',\n            count: 'count'\n        }\n        \n    }\n\n    return (\n        <div>\n            <select onChange={(e) => sortArray(e.currentTarget.value)} >\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n            {items.map(item => <Item key={item.id}\n                                     id={item.id}\n                                     imageUrl={item.imageUrl}\n                                     count={item.count}\n                                     name={item.name}\n                                     size={item.size}\n                                     weight={item.weight}\n                                     deleteItem={deleteItem}\n            />)}\n        </div>\n    )\n}\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}