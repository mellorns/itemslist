{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/Common/formControl/formControl.tsx\";\nimport React from \"react\"; // import styles from './formsControls.module'\n\nimport { Field } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormControl = ({\n  meta: {\n    touched,\n    error\n  },\n  children\n}) => {\n  const hasError = touched && error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = FormControl;\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, { ...props,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Input;\nexport function createField(placeholder, name, component, validators, props = {}, text = '') {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      placeholder: placeholder,\n      name: name,\n      component: component,\n      validate: validators,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), \" \", text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/Common/formControl/formControl.tsx"],"names":["React","Field","FormControl","meta","touched","error","children","hasError","Input","props","input","restProps","createField","placeholder","name","component","validators","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,KAAR,QAA8D,YAA9D;;AAMA,OAAO,MAAMC,WAA4C,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAP;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAChG,QAAMC,QAAQ,GAAGH,OAAO,IAAIC,KAA5B;AACA,sBACI;AAAA,4BACI;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKC,QAAQ,iBAAI;AAAA,kBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZM;KAAMH,W;AAeb,OAAO,MAAMM,KAAkC,GAAIC,KAAD,IAAW;AACzD,QAAM;AAACC,IAAAA,KAAD;AAAQP,IAAAA,IAAR;AAAc,OAAGQ;AAAjB,MAA8BF,KAApC;AACA,sBAAO,QAAC,WAAD,OAAiBA,KAAjB;AAAA,iCAA0B,sBAAWC,KAAX;AAAA,SAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHM;MAAMH,K;AAKb,OAAO,SAASI,WAAT,CAAkDC,WAAlD,EACkDC,IADlD,EAEkDC,SAFlD,EAGkDC,UAHlD,EAIkDP,KAAK,GAAG,EAJ1D,EAKkDQ,IAAI,GAAG,EALzD,EAK6D;AAChE,sBAAO;AAAA,4BACH,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEJ,WAApB;AACO,MAAA,IAAI,EAAEC,IADb;AAEO,MAAA,SAAS,EAAEC,SAFlB;AAGO,MAAA,QAAQ,EAAEC,UAHjB;AAAA,SAIWP;AAJX;AAAA;AAAA;AAAA;AAAA,YADG,OAMCQ,IAND;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH","sourcesContent":["import React from \"react\";\n// import styles from './formsControls.module'\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\nimport {FieldValidatorType} from \"../../utils/validators/validators\";\n\ntype FormControlParamsType = {\n    meta: WrappedFieldMetaProps\n}\nexport const FormControl: React.FC<FormControlParamsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error\n    return (\n        <div >\n            <div>\n                {children}\n            </div>\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n    )\n}\n\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} > <input {...input} {...restProps}/></FormControl>\n}\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         component: React.FC<WrappedFieldProps>,\n                                                         validators: Array<FieldValidatorType>,\n                                                         props = {},\n                                                         text = '') {\n    return <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}\n        /> {text}\n    </div>\n}"]},"metadata":{},"sourceType":"module"}