{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { actions } from \"../../Redux/items-reducer\";\nimport AddInformation from \"./AddInformation\";\nimport CommentsSection from \"./Comments/CommentSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId - 1;\n      this.props.setItem(itemId);\n    };\n  }\n\n  componentDidMount() {\n    this.getItemId();\n    console.log(this.props.item);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.item !== this.props.item) {\n      this.getItemId();\n    }\n  }\n\n  render() {\n    var _this$props$item;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AddInformation, {\n          item: this.props.item,\n          updateItem: this.props.updateItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(CommentsSection, {\n          comments: (_this$props$item = this.props.item) === null || _this$props$item === void 0 ? void 0 : _this$props$item.comments,\n          deleteComment: this.props.deleteComment,\n          addComment: this.props.addComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.itemsPage.item,\n  items: state.itemsPage.items\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem: actions.setItem,\n  deleteComment: actions.deleteComment,\n  addComment: actions.addComment,\n  updateItem: actions.updateItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","withRouter","compose","actions","AddInformation","CommentsSection","AddInformationContainer","Component","getItemId","itemId","props","match","params","setItem","componentDidMount","console","log","item","componentDidUpdate","prevProps","prevState","snapshot","render","updateItem","comments","deleteComment","addComment","mapStateToProps","state","itemsPage","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,MAAMC,uBAAN,SAAsCP,KAAK,CAACQ,SAA5C,CAAsD;AAAA;AAAA;;AAAA,SAGlDC,SAHkD,GAGtC,MAAM;AACd,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,GAAiC,CAA9C;AACA,WAAKC,KAAL,CAAWG,OAAX,CAAmBJ,MAAnB;AACH,KANiD;AAAA;;AAQlDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,SAAL;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,IAAvB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACF,IAAV,KAAmB,KAAKP,KAAL,CAAWO,IAAlC,EAAwC;AACpC,WAAKT,SAAL;AACH;AACJ;;AAEDc,EAAAA,MAAM,GAAG;AAAA;;AACL,wBACI;AAAA,6BACI;AAAA,gCAEW,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWO,IAAjC;AAAuC,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWa;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAFX,eAGQ,QAAC,eAAD;AACI,UAAA,QAAQ,sBAAE,KAAKb,KAAL,CAAWO,IAAb,qDAAE,iBAAiBO,QAD/B;AAEI,UAAA,aAAa,EAAE,KAAKd,KAAL,CAAWe,aAF9B;AAGI,UAAA,UAAU,EAAE,KAAKf,KAAL,CAAWgB;AAH3B;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAiBH;;AArCiD;;AAwCtD,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACC,SAAN,CAAgBZ,IADU;AAEhCa,EAAAA,KAAK,EAAEF,KAAK,CAACC,SAAN,CAAgBC;AAFS,CAAZ,CAAxB;;AAMA,eAAe5B,OAAO,CAACF,OAAO,CAAC2B,eAAD,EAAkB;AACxCd,EAAAA,OAAO,EAAEV,OAAO,CAACU,OADuB;AAExCY,EAAAA,aAAa,EAAEtB,OAAO,CAACsB,aAFiB;AAGxCC,EAAAA,UAAU,EAAEvB,OAAO,CAACuB,UAHoB;AAIxCH,EAAAA,UAAU,EAAEpB,OAAO,CAACoB;AAJoB,CAAlB,CAAR,EAMlBtB,UANkB,CAAP,CAMCK,uBAND,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {actions} from \"../../Redux/items-reducer\";\nimport AddInformation from \"./AddInformation\";\nimport CommentsSection from \"./Comments/CommentSection\";\n\nclass AddInformationContainer extends React.Component {\n\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId - 1\n        this.props.setItem(itemId)\n    }\n\n    componentDidMount() {\n        this.getItemId()\n        console.log(this.props.item)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.item !== this.props.item) {\n            this.getItemId()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    \n                           <AddInformation item={this.props.item} updateItem={this.props.updateItem}/>\n                        <CommentsSection\n                            comments={this.props.item?.comments}\n                            deleteComment={this.props.deleteComment}\n                            addComment={this.props.addComment}\n                        />\n\n\n\n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.itemsPage.item,\n    items: state.itemsPage.items,\n})\n\n\nexport default compose(connect(mapStateToProps, {\n        setItem: actions.setItem,\n        deleteComment: actions.deleteComment,\n        addComment: actions.addComment,\n        updateItem: actions.updateItem\n    }),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}