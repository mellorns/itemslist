{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setItem } from \"../../Redux/items-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId;\n      this.props.setItem(itemId);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.item);\n    this.getItemId();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.item !== this.props.item) {\n      this.getItemId();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AddInformation, {\n        item: this.props.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // imgUrl: state.itemsPage.items.imageUrl,\n  // name: state.itemsPage.items.name,\n  // description: state.itemsPage.items.description,\n  // collar: state.itemsPage.items.collar,\n  // size: state.itemsPage.items.size,\n  // weight: state.itemsPage.items.weight,\n  item: state.itemsPage.item\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","AddInformation","withRouter","compose","setItem","AddInformationContainer","Component","getItemId","itemId","props","match","params","componentDidMount","console","log","item","componentDidUpdate","prevProps","prevState","snapshot","render","mapStateToProps","state","itemsPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;;AAEA,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,SAA5C,CAAsD;AAAA;AAAA;;AAAA,SAIlDC,SAJkD,GAItC,MAAM;AACd,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;AACA,WAAKC,KAAL,CAAWL,OAAX,CAAmBI,MAAnB;AACH,KAPiD;AAAA;;AAQlDI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,IAAvB;AACA,SAAKR,SAAL;AACH;;AACDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAGF,SAAS,CAACF,IAAV,KAAmB,KAAKN,KAAL,CAAWM,IAAjC,EAAsC;AAClC,WAAKR,SAAL;AACH;AACJ;;AAEDa,EAAAA,MAAM,GAAG;AACN,wBACI;AAAA,6BACK,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWM;AAAjC;AAAA;AAAA;AAAA;AAAA;AADL,qBADJ;AAMH;;AAzBkD;;AA4BtD,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACAP,EAAAA,IAAI,EAAEO,KAAK,CAACC,SAAN,CAAgBR;AAPU,CAAZ,CAAxB;;AAYA,eAAeZ,OAAO,CAACH,OAAO,CAACqB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAR,EAClBF,UADkB,CAAP,CACCG,uBADD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {setItem} from \"../../Redux/items-reducer\";\n\nclass AddInformationContainer extends React.Component {\n\n\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId\n        this.props.setItem(itemId)\n    }\n    componentDidMount() {\n        console.log(this.props.item)\n        this.getItemId()\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.item !== this.props.item){\n            this.getItemId()\n        }\n    }\n\n    render() {\n       return(\n           <>\n                <AddInformation item={this.props.item}\n                />\n           </>\n       )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    // imgUrl: state.itemsPage.items.imageUrl,\n    // name: state.itemsPage.items.name,\n    // description: state.itemsPage.items.description,\n    // collar: state.itemsPage.items.collar,\n    // size: state.itemsPage.items.size,\n    // weight: state.itemsPage.items.weight,\n    item: state.itemsPage.item,\n})\n\n\n\nexport default compose(connect(mapStateToProps, {setItem}),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}