{"ast":null,"code":"export const required = value => {\n  if (value) return undefined;\n  return \"Field is required\";\n};\nexport const maxLengthCreator = maxLength => value => {\n  if (value.length > maxLength) return \"Max symbols was reached\";\n  return undefined;\n};","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/utils/validators/validators.ts"],"names":["required","value","undefined","maxLengthCreator","maxLength","length"],"mappings":"AAEA,OAAO,MAAMA,QAA4B,GAAGC,KAAK,IAAI;AACjD,MAAGA,KAAH,EAAU,OAAOC,SAAP;AACV,SAAO,mBAAP;AACH,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAA2CH,KAAD,IAAW;AACjF,MAAGA,KAAK,CAACI,MAAN,GAAeD,SAAlB,EAA6B,OAAO,yBAAP;AAC7B,SAAOF,SAAP;AACH,CAHM","sourcesContent":["export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = value => {\n    if(value) return undefined;\n    return \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength: number):FieldValidatorType => (value) => {\n    if(value.length > maxLength) return \"Max symbols was reached\"\n    return undefined\n}\n"]},"metadata":{},"sourceType":"module"}