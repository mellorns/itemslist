{"ast":null,"code":"import React from 'react';\nimport { connect } from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setItem } from \"../../Redux/items-reducer\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId - 1;\n      this.props.setItem(itemId);\n    };\n  }\n\n  componentDidMount() {\n    this.getItemId();\n    console.log(this.props.item);\n  } // componentDidUpdate(prevProps, prevState, snapshot) {\n  //     if(prevProps !== this.props){\n  //         this.getItemId()\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // imgUrl: state.itemsPage.items.imageUrl,\n  // name: state.itemsPage.items.name,\n  // description: state.itemsPage.items.description,\n  // collar: state.itemsPage.items.collar,\n  // size: state.itemsPage.items.size,\n  // weight: state.itemsPage.items.weight,\n  item: state.itemsPage.item\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","AddInformation","withRouter","compose","setItem","AddInformationContainer","Component","getItemId","itemId","props","match","params","componentDidMount","console","log","item","render","mapStateToProps","state","itemsPage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;;AAEA,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,SAA5C,CAAsD;AAAA;AAAA;;AAAA,SAIlDC,SAJkD,GAItC,MAAM;AACd,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,GAAiC,CAA9C;AACA,WAAKC,KAAL,CAAWL,OAAX,CAAmBI,MAAnB;AAEH,KARiD;AAAA;;AASlDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,IAAvB;AACH,GAZiD,CAalD;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACN,wBACI,qCADJ;AAYH;;AAhCkD;;AAmCtD,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,IAAI,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AAPU,CAAZ,CAAxB;;AAYA,eAAeZ,OAAO,CAACH,OAAO,CAACiB,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAR,EAClBF,UADkB,CAAP,CACCG,uBADD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport AddInformation from \"./AddInformation\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {setItem} from \"../../Redux/items-reducer\";\n\nclass AddInformationContainer extends React.Component {\n\n\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId - 1\n        this.props.setItem(itemId)\n\n    }\n    componentDidMount() {\n        this.getItemId()\n        console.log(this.props.item)\n    }\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(prevProps !== this.props){\n    //         this.getItemId()\n    //     }\n    // }\n\n    render() {\n       return(\n           <>\n\n                {/*<AddInformation imgUrl={this.props.item.imgUrl}*/}\n                {/*                name={this.props.item.name}*/}\n                {/*                description={this.props.item.description}*/}\n                {/*                collar={this.props.item.collar}*/}\n                {/*                size={this.props.item.size}*/}\n                {/*                weight={this.props.item.weight}*/}\n                {/*/>*/}\n           </>\n       )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    // imgUrl: state.itemsPage.items.imageUrl,\n    // name: state.itemsPage.items.name,\n    // description: state.itemsPage.items.description,\n    // collar: state.itemsPage.items.collar,\n    // size: state.itemsPage.items.size,\n    // weight: state.itemsPage.items.weight,\n    item: state.itemsPage.item,\n})\n\n\n\nexport default compose(connect(mapStateToProps, {setItem}),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}