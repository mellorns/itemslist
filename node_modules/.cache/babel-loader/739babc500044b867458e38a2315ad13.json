{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { actions } from \"../../Redux/items-reducer\";\nimport AddInformation from \"./AddInformation\";\nimport CommentsSection from \"./Comments/CommentSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddInformationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemId: 0\n    };\n\n    this.getItemId = () => {\n      let itemId = this.props.match.params.itemId - 1; // this.setState({\n      //     itemId: itemId\n      // })\n\n      this.props.setItem(itemId);\n    };\n  }\n\n  componentDidMount() {\n    this.getItemId();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.item !== this.props.item) {\n      this.getItemId();\n    }\n  }\n\n  render() {\n    var _this$props$item;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AddInformation, {\n          item: this.props.item,\n          updateItem: this.props.updateItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CommentsSection, {\n          comments: (_this$props$item = this.props.item) === null || _this$props$item === void 0 ? void 0 : _this$props$item.comments,\n          deleteComment: this.props.deleteComment,\n          addComment: this.props.addComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.itemsPage.item,\n  items: state.itemsPage.items\n});\n\nexport default compose(connect(mapStateToProps, {\n  setItem: actions.setItem,\n  deleteComment: actions.deleteComment,\n  addComment: actions.addComment,\n  updateItem: actions.updateItem\n}), withRouter)(AddInformationContainer);","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformation/AddInformationContainer.js"],"names":["React","connect","withRouter","compose","actions","AddInformation","CommentsSection","AddInformationContainer","Component","state","itemId","getItemId","props","match","params","setItem","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","item","render","updateItem","comments","deleteComment","addComment","mapStateToProps","itemsPage","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,MAAMC,uBAAN,SAAsCP,KAAK,CAACQ,SAA5C,CAAsD;AAAA;AAAA;AAAA,SAElDC,KAFkD,GAE1C;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF0C;;AAAA,SAMlDC,SANkD,GAMtC,MAAM;AACd,UAAID,MAAM,GAAG,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,MAAxB,GAAiC,CAA9C,CADc,CAEd;AACA;AACA;;AACA,WAAKE,KAAL,CAAWG,OAAX,CAAmBL,MAAnB;AACH,KAZiD;AAAA;;AAclDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,SAAL;AACH;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACG,IAAV,KAAmB,KAAKT,KAAL,CAAWS,IAAlC,EAAwC;AACpC,WAAKV,SAAL;AACH;AACJ;;AAEDW,EAAAA,MAAM,GAAG;AAAA;;AACL,wBACI;AAAA,6BACI;AAAA,gCACI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWS,IAAjC;AAAuC,UAAA,UAAU,EAAE,KAAKT,KAAL,CAAWW;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,eAAD;AACI,UAAA,QAAQ,sBAAE,KAAKX,KAAL,CAAWS,IAAb,qDAAE,iBAAiBG,QAD/B;AAEI,UAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWa,aAF9B;AAGI,UAAA,UAAU,EAAE,KAAKb,KAAL,CAAWc;AAH3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAaH;;AAtCiD;;AAyCtD,MAAMC,eAAe,GAAIlB,KAAD,KAAY;AAChCY,EAAAA,IAAI,EAAEZ,KAAK,CAACmB,SAAN,CAAgBP,IADU;AAEhCQ,EAAAA,KAAK,EAAEpB,KAAK,CAACmB,SAAN,CAAgBC;AAFS,CAAZ,CAAxB;;AAMA,eAAe1B,OAAO,CAACF,OAAO,CAAC0B,eAAD,EAAkB;AACxCZ,EAAAA,OAAO,EAAEX,OAAO,CAACW,OADuB;AAExCU,EAAAA,aAAa,EAAErB,OAAO,CAACqB,aAFiB;AAGxCC,EAAAA,UAAU,EAAEtB,OAAO,CAACsB,UAHoB;AAIxCH,EAAAA,UAAU,EAAEnB,OAAO,CAACmB;AAJoB,CAAlB,CAAR,EAMlBrB,UANkB,CAAP,CAMCK,uBAND,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {actions} from \"../../Redux/items-reducer\";\nimport AddInformation from \"./AddInformation\";\nimport CommentsSection from \"./Comments/CommentSection\";\n\nclass AddInformationContainer extends React.Component {\n\n    state = {\n        itemId: 0\n    }\n\n    getItemId = () => {\n        let itemId = this.props.match.params.itemId - 1\n        // this.setState({\n        //     itemId: itemId\n        // })\n        this.props.setItem(itemId)\n    }\n\n    componentDidMount() {\n        this.getItemId()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.item !== this.props.item) {\n            this.getItemId()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <AddInformation item={this.props.item} updateItem={this.props.updateItem}/>\n                    <CommentsSection\n                        comments={this.props.item?.comments}\n                        deleteComment={this.props.deleteComment}\n                        addComment={this.props.addComment}\n                    />\n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.itemsPage.item,\n    items: state.itemsPage.items,\n})\n\n\nexport default compose(connect(mapStateToProps, {\n        setItem: actions.setItem,\n        deleteComment: actions.deleteComment,\n        addComment: actions.addComment,\n        updateItem: actions.updateItem\n    }),\n    withRouter)(AddInformationContainer)\n"]},"metadata":{},"sourceType":"module"}