{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport Item from \"./Items/Item\";\nimport { useEffect, useState } from \"react\";\nimport s from './MainPage.module.css';\nimport './AddProductForm/AddProductForm.css';\nimport { reduxForm } from \"redux-form\";\nimport AddProductForm from \"./AddProductForm/AddProductForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  items,\n  deleteItem\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState();\n  useEffect(() => {\n    debugger;\n\n    const sortArray = type => {\n      const types = {\n        name: 'name',\n        count: 'count'\n      };\n      let sortProperty = types[type];\n\n      if (sortProperty === 'name') {\n        const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n        setData(sorted);\n      } else if (sortProperty === 'count') {\n        const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty]);\n        setData(sorted);\n      } else {\n        return null;\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  useEffect(() => {\n    setData(items);\n  }, [items]);\n  let modal = document.getElementById('myModal');\n\n  const ModalOn = () => {\n    modal.style.display = \"block\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.addProductButton,\n      onClick: ModalOn,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: s.selectMode,\n      onChange: e => setSortType(e.currentTarget.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sort\",\n        children: \"Sort By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"count\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      id: item.id,\n      imageUrl: item.imageUrl,\n      count: item.count,\n      name: item.name,\n      size: item.size,\n      weight: item.weight,\n      deleteItem: deleteItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this)), /*#__PURE__*/_jsxDEV(AddProductReduxForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"31vVONxmvu9kuGckj2JPfhrJpYM=\");\n\n_c = MainPage;\nconst AddProductReduxForm = reduxForm({\n  form: 'add-product'\n})(AddProductForm);\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js"],"names":["Item","useEffect","useState","s","reduxForm","AddProductForm","MainPage","items","deleteItem","data","setData","sortType","setSortType","sortArray","type","types","name","count","sortProperty","sorted","sort","a","b","localeCompare","modal","document","getElementById","ModalOn","style","display","addProductButton","selectMode","e","currentTarget","value","map","item","id","imageUrl","size","weight","AddProductReduxForm","form"],"mappings":"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","sourcesContent":["import Item from \"./Items/Item\";\nimport {useEffect, useState} from \"react\";\nimport s from './MainPage.module.css'\nimport './AddProductForm/AddProductForm.css'\nimport {reduxForm} from \"redux-form\";\nimport AddProductForm from \"./AddProductForm/AddProductForm\";\n\nconst MainPage = ({items, deleteItem}) => {\n\n    const [data, setData] = useState([])\n    const [sortType, setSortType] = useState()\n\n    useEffect(() => {\n        debugger\n        const sortArray = (type) => {\n            const types = {\n                name: 'name',\n                count: 'count'\n            }\n            let sortProperty = types[type]\n            if (sortProperty === 'name') {\n                const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n                setData(sorted)\n            } else if (sortProperty === 'count') {\n                const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty])\n                setData(sorted)\n            } else {\n                return null\n            }\n        }\n        sortArray(sortType)\n    }, [sortType])\n    useEffect(() => {\n        setData(items)\n    }, [items])\n\n\n    let modal = document.getElementById('myModal')\n\n    const ModalOn = () => {\n        modal.style.display = \"block\";\n\n    }\n\n\n    return (\n        <div>\n            <button className={s.addProductButton} onClick={ModalOn}>Add Product</button>\n            <select className={s.selectMode} onChange={(e) => setSortType(e.currentTarget.value)}>\n                <option value=\"sort\">Sort By:</option>\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n\n            {data.map(item => <Item key={item.id}\n                                    id={item.id}\n                                    imageUrl={item.imageUrl}\n                                    count={item.count}\n                                    name={item.name}\n                                    size={item.size}\n                                    weight={item.weight}\n                                    deleteItem={deleteItem}\n            />)}\n            <AddProductReduxForm />\n        </div>\n\n    )\n}\nconst AddProductReduxForm = reduxForm({form: 'add-product'})(AddProductForm)\n\n\n\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}