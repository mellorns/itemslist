{"ast":null,"code":"import _objectSpread from\"/Users/v.yakovenko/Desktop/max/my-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/v.yakovenko/Desktop/max/my-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"input\",\"meta\"];import React from\"react\";import{Field}from\"redux-form\";import s from'./formControl.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var FormControl=function FormControl(_ref){var _ref$meta=_ref.meta,touched=_ref$meta.touched,error=_ref$meta.error,children=_ref.children;var hasError=touched&&error;return/*#__PURE__*/_jsxs(\"div\",{className:s.formControl+' '+(hasError?s.error:\"\"),children:[/*#__PURE__*/_jsx(\"div\",{children:children}),/*#__PURE__*/_jsx(\"div\",{children:hasError&&/*#__PURE__*/_jsx(\"span\",{children:error})})]});};export var Input=function Input(props){var input=props.input,meta=props.meta,restProps=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/_jsxs(FormControl,_objectSpread(_objectSpread({},props),{},{children:[\" \",/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},input),restProps))]}));};export function createField(placeholder,name,component,validators){var props=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var text=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,_objectSpread({placeholder:placeholder,name:name,component:component,validate:validators},props)),\" \",text]});}","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/Common/formControl/formControl.tsx"],"names":["React","Field","s","FormControl","meta","touched","error","children","hasError","formControl","Input","props","input","restProps","createField","placeholder","name","component","validators","text"],"mappings":"kXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,KAA8D,YAA9D,CAEA,MAAOC,CAAAA,CAAP,KAAc,0BAAd,C,wFAIA,MAAO,IAAMC,CAAAA,WAA4C,CAAG,QAA/CA,CAAAA,WAA+C,MAAwC,oBAAtCC,IAAsC,CAA/BC,OAA+B,WAA/BA,OAA+B,CAAtBC,KAAsB,WAAtBA,KAAsB,CAAdC,QAAc,MAAdA,QAAc,CAChG,GAAMC,CAAAA,QAAQ,CAAGH,OAAO,EAAIC,KAA5B,CACA,mBACI,aAAK,SAAS,CAAEJ,CAAC,CAACO,WAAF,CAAgB,GAAhB,EAAuBD,QAAQ,CAAGN,CAAC,CAACI,KAAL,CAAa,EAA5C,CAAhB,wBACI,qBACKC,QADL,EADJ,cAII,qBACKC,QAAQ,eAAI,sBAAOF,KAAP,EADjB,EAJJ,GADJ,CAUH,CAZM,CAeP,MAAO,IAAMI,CAAAA,KAAkC,CAAG,QAArCA,CAAAA,KAAqC,CAACC,KAAD,CAAW,CACzD,GAAOC,CAAAA,KAAP,CAAoCD,KAApC,CAAOC,KAAP,CAAcR,IAAd,CAAoCO,KAApC,CAAcP,IAAd,CAAuBS,SAAvB,0BAAoCF,KAApC,YACA,mBAAO,MAAC,WAAD,gCAAiBA,KAAjB,iCAA0B,4CAAWC,KAAX,EAAsBC,SAAtB,EAA1B,IAAP,CACH,CAHM,CAKP,MAAO,SAASC,CAAAA,WAAT,CAAkDC,WAAlD,CACkDC,IADlD,CAEkDC,SAFlD,CAGkDC,UAHlD,CAK6D,IADXP,CAAAA,KACW,2DADH,EACG,IAAXQ,CAAAA,IAAW,2DAAJ,EAAI,CAChE,mBAAO,oCACH,KAAC,KAAD,gBAAO,WAAW,CAAEJ,WAApB,CACO,IAAI,CAAEC,IADb,CAEO,SAAS,CAAEC,SAFlB,CAGO,QAAQ,CAAEC,UAHjB,EAIWP,KAJX,EADG,KAMCQ,IAND,GAAP,CAQH","sourcesContent":["import React from \"react\";\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\nimport {FieldValidatorType} from \"../../utils/validators/validators\";\nimport s from './formControl.module.css'\ntype FormControlParamsType = {\n    meta: WrappedFieldMetaProps\n}\nexport const FormControl: React.FC<FormControlParamsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error\n    return (\n        <div className={s.formControl + ' ' + (hasError ? s.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n    )\n}\n\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} > <input {...input} {...restProps}/></FormControl>\n}\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         component: React.FC<WrappedFieldProps>,\n                                                         validators: Array<FieldValidatorType>,\n                                                         props = {},\n                                                         text = '') {\n    return <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}\n        /> {text}\n    </div>\n}"]},"metadata":{},"sourceType":"module"}