{"ast":null,"code":"var _jsxFileName = \"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport Item from \"./Items/Item\";\nimport { useEffect, useState } from \"react\";\nimport s from './MainPage.module.css';\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  items,\n  deleteItem\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState();\n  useEffect(() => {\n    debugger;\n\n    const sortArray = type => {\n      const types = {\n        name: 'name',\n        count: 'count'\n      };\n      let sortProperty = types[type];\n\n      if (sortProperty === 'name') {\n        const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n        setData(sorted);\n      } else if (sortProperty === 'count') {\n        const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty]);\n        setData(sorted);\n      } else {\n        return null;\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  useEffect(() => {\n    setData(items);\n  }, [items]);\n  let modal = document.getElementById('myModal');\n\n  const ModalOn = () => {\n    modal.style.display = \"block\";\n  };\n\n  const closeModal = () => {\n    modal.style.display = \"none\";\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert('qwe');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.addProductButton,\n      onClick: ModalOn,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: s.selectMode,\n      onChange: e => setSortType(e.currentTarget.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sort\",\n        children: \"Sort By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"count\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      id: item.id,\n      imageUrl: item.imageUrl,\n      count: item.count,\n      name: item.name,\n      size: item.size,\n      weight: item.weight,\n      deleteItem: deleteItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: closeModal,\n            className: \"close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: [\"Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"31vVONxmvu9kuGckj2JPfhrJpYM=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.js"],"names":["Item","useEffect","useState","s","MainPage","items","deleteItem","data","setData","sortType","setSortType","sortArray","type","types","name","count","sortProperty","sorted","sort","a","b","localeCompare","modal","document","getElementById","ModalOn","style","display","closeModal","handleSubmit","e","preventDefault","alert","addProductButton","selectMode","currentTarget","value","map","item","id","imageUrl","size","weight"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAO,aAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AAAA;;AAEtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;;AACA,UAAMU,SAAS,GAAIC,IAAD,IAAU;AACxB,YAAMC,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAE,MADI;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIA,UAAIC,YAAY,GAAGH,KAAK,CAACD,IAAD,CAAxB;;AACA,UAAII,YAAY,KAAK,MAArB,EAA6B;AACzB,cAAMC,MAAM,GAAG,CAAC,GAAGZ,KAAJ,EAAWa,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,IAAF,CAAOO,aAAP,CAAqBD,CAAC,CAACN,IAAvB,CAA1B,CAAf;AACAN,QAAAA,OAAO,CAACS,MAAD,CAAP;AACH,OAHD,MAGO,IAAID,YAAY,KAAK,OAArB,EAA8B;AACjC,cAAMC,MAAM,GAAG,CAAC,GAAGZ,KAAJ,EAAWa,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,YAAD,CAAD,GAAkBI,CAAC,CAACJ,YAAD,CAA7C,CAAf;AACAR,QAAAA,OAAO,CAACS,MAAD,CAAP;AACH,OAHM,MAGA;AACH,eAAO,IAAP;AACH;AACJ,KAfD;;AAgBAN,IAAAA,SAAS,CAACF,QAAD,CAAT;AACH,GAnBQ,EAmBN,CAACA,QAAD,CAnBM,CAAT;AAoBAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACH,KAAD,CAAP;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,MAAIiB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAZ;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClBH,IAAAA,KAAK,CAACI,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AAEH,GAHD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBN,IAAAA,KAAK,CAACI,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACH,GAFD;;AAIA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,KAAD,CAAL;AACH,GAHD;;AAMA,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAE7B,CAAC,CAAC8B,gBAArB;AAAuC,MAAA,OAAO,EAAER,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAEtB,CAAC,CAAC+B,UAArB;AAAiC,MAAA,QAAQ,EAAGJ,CAAD,IAAOpB,WAAW,CAACoB,CAAC,CAACK,aAAF,CAAgBC,KAAjB,CAA7D;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQK7B,IAAI,CAAC8B,GAAL,CAASC,IAAI,iBAAI,QAAC,IAAD;AACM,MAAA,EAAE,EAAEA,IAAI,CAACC,EADf;AAEM,MAAA,QAAQ,EAAED,IAAI,CAACE,QAFrB;AAGM,MAAA,KAAK,EAAEF,IAAI,CAACvB,KAHlB;AAIM,MAAA,IAAI,EAAEuB,IAAI,CAACxB,IAJjB;AAKM,MAAA,IAAI,EAAEwB,IAAI,CAACG,IALjB;AAMM,MAAA,MAAM,EAAEH,IAAI,CAACI,MANnB;AAOM,MAAA,UAAU,EAAEpC;AAPlB,OAAWgC,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAjB,CARL,eAiBI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAM,YAAA,OAAO,EAAEX,UAAf;AAA2B,YAAA,SAAS,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAM,YAAA,MAAM,EAAC,EAAb;AAAgB,YAAA,QAAQ,EAAEC,YAA1B;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,EAAf;AAAA,+CAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAO,cAAA,OAAO,EAAC,EAAf;AAAA,+CAEI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAO,cAAA,OAAO,EAAC,EAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ,eAYI;AAAO,cAAA,OAAO,EAAC,EAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAeI;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAwBI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH,CAhGD;;GAAMzB,Q;;KAAAA,Q;AAkGN,eAAeA,QAAf","sourcesContent":["import Item from \"./Items/Item\";\nimport {useEffect, useState} from \"react\";\nimport s from './MainPage.module.css'\nimport './modal.css'\n\nconst MainPage = ({items, deleteItem}) => {\n\n    const [data, setData] = useState([])\n    const [sortType, setSortType] = useState()\n\n    useEffect(() => {\n        debugger\n        const sortArray = (type) => {\n            const types = {\n                name: 'name',\n                count: 'count'\n            }\n            let sortProperty = types[type]\n            if (sortProperty === 'name') {\n                const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n                setData(sorted)\n            } else if (sortProperty === 'count') {\n                const sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty])\n                setData(sorted)\n            } else {\n                return null\n            }\n        }\n        sortArray(sortType)\n    }, [sortType])\n    useEffect(() => {\n        setData(items)\n    }, [items])\n\n    let modal = document.getElementById('myModal')\n\n    const ModalOn = () => {\n        modal.style.display = \"block\";\n\n    }\n    const closeModal = () => {\n        modal.style.display = \"none\";\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        alert('qwe')\n    }\n\n\n    return (\n        <div>\n            <button className={s.addProductButton} onClick={ModalOn}>Add Product</button>\n            <select className={s.selectMode} onChange={(e) => setSortType(e.currentTarget.value)}>\n                <option value=\"sort\">Sort By:</option>\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n\n            {data.map(item => <Item key={item.id}\n                                    id={item.id}\n                                    imageUrl={item.imageUrl}\n                                    count={item.count}\n                                    name={item.name}\n                                    size={item.size}\n                                    weight={item.weight}\n                                    deleteItem={deleteItem}\n            />)}\n            <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span onClick={closeModal} className=\"close\">×</span>\n                        <h2>Add Product</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form action=\"\" onSubmit={handleSubmit}>\n                            <label htmlFor=\"\">\n                                Name:\n                                <input type=\"text\" id=''/>\n                            </label>\n                            <label htmlFor=\"\">\n                                Size:\n                                <input type=\"text\" />\n                            </label>\n                            <label htmlFor=\"\">\n                                <input type=\"text\" />\n                            </label>\n                            <label htmlFor=\"\">\n                                <input type=\"text\" />\n                            </label>\n                            <input type=\"submit\" />\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <h3></h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default MainPage"]},"metadata":{},"sourceType":"module"}