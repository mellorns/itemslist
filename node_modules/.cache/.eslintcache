[{"/Users/v.yakovenko/Desktop/max/my-project/src/index.js":"1","/Users/v.yakovenko/Desktop/max/my-project/src/App.js":"2","/Users/v.yakovenko/Desktop/max/my-project/src/reportWebVitals.js":"3","/Users/v.yakovenko/Desktop/max/my-project/src/Redux/redux-store.tsx":"4","/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/Items/Item.tsx":"5","/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.tsx":"6","/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/AddProductForm/AddProductForm.tsx":"7","/Users/v.yakovenko/Desktop/max/my-project/src/Redux/items-reducer.tsx":"8","/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPageContainer.tsx":"9","/Users/v.yakovenko/Desktop/max/my-project/src/components/Header/Header.tsx":"10","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPageContainer.tsx":"11","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPage.tsx":"12","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/Comments/CommentSection.tsx":"13","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPaheDataForm.tsx":"14","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/Comments/Comment.tsx":"15","/Users/v.yakovenko/Desktop/max/my-project/src/utils/validators/validators.ts":"16","/Users/v.yakovenko/Desktop/max/my-project/src/Common/formControl/formControl.tsx":"17"},{"size":599,"mtime":1627584641115,"results":"18","hashOfConfig":"19"},{"size":895,"mtime":1627899173467,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1627466420684,"results":"21","hashOfConfig":"19"},{"size":508,"mtime":1627762492520,"results":"22","hashOfConfig":"19"},{"size":2368,"mtime":1627853658954,"results":"23","hashOfConfig":"19"},{"size":3420,"mtime":1627853110265,"results":"24","hashOfConfig":"19"},{"size":1799,"mtime":1627892352245,"results":"25","hashOfConfig":"19"},{"size":5628,"mtime":1627854919680,"results":"26","hashOfConfig":"19"},{"size":1152,"mtime":1627851157193,"results":"27","hashOfConfig":"19"},{"size":98,"mtime":1627853145968,"results":"28","hashOfConfig":"19"},{"size":2239,"mtime":1627889415339,"results":"29","hashOfConfig":"19"},{"size":2825,"mtime":1627889415342,"results":"30","hashOfConfig":"19"},{"size":974,"mtime":1627857071967,"results":"31","hashOfConfig":"19"},{"size":2047,"mtime":1627892424885,"results":"32","hashOfConfig":"19"},{"size":567,"mtime":1627889415333,"results":"33","hashOfConfig":"19"},{"size":478,"mtime":1627892195836,"results":"34","hashOfConfig":"19"},{"size":1595,"mtime":1627891582879,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"twqst7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/v.yakovenko/Desktop/max/my-project/src/index.js",[],["74","75"],"/Users/v.yakovenko/Desktop/max/my-project/src/App.js",[],"/Users/v.yakovenko/Desktop/max/my-project/src/reportWebVitals.js",[],"/Users/v.yakovenko/Desktop/max/my-project/src/Redux/redux-store.tsx",[],["76","77"],"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/Items/Item.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPage.tsx",["78"],"import Item from \"./Items/Item\";\nimport React, {useEffect, useState} from \"react\";\nimport s from './MainPage.module.css'\nimport './AddProductForm/AddProductForm.css'\nimport {AddProductFormValueType, AddProductReduxForm} from \"./AddProductForm/AddProductForm\";\nimport {itemType} from \"../../types/types\";\n\n\ntype MainPagePropsType = {\n    items: Array<itemType>,\n    deleteItem: (id: number) => void,\n    addItem: (formData: AddProductFormValueType) => void\n}\n\nconst MainPage: React.FC<MainPagePropsType> = ({items, deleteItem, addItem}) => {\n\n    const [data, setData] = useState<Array<itemType>>([])\n    const [sortType, setSortType] = useState<string>('')\n    const [isAddFormOpen, setIsAddFormOpen] = useState<boolean>(false)\n\n    useEffect(() => {\n\n\n        interface IObjectKeys {\n            [key: string]: string\n        }\n\n        interface IDevice extends IObjectKeys {\n            name: string,\n            count: string\n        }\n\n\n        const sortArray = (type: string) => {\n\n            const types: IDevice = {\n                name: 'name',\n                count: 'count'\n            }\n            let sortProperty = types[type]\n            if (sortProperty === 'name') {\n                const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n                setData(sorted)\n            } else if (sortProperty === 'count') {\n                const sorted = [...items].sort((a :any, b:any) => a[sortProperty] - b[sortProperty])\n                setData(sorted)\n            } else {\n                return null\n            }\n        }\n        sortArray(sortType)\n    }, [sortType])\n    useEffect(() => {\n        setData(items)\n    }, [items])\n    const ModalOn = () => {\n        setIsAddFormOpen(true)\n    }\n    const onSubmit = (formData: any) => {\n        addItem(formData)\n        setIsAddFormOpen(false)\n    }\n    const closeModal = () => {\n        setIsAddFormOpen(false)\n    }\n    return (\n        <div>\n            <button className={s.addProductButton} onClick={ModalOn}>Add Product</button>\n            <select className={s.selectMode} onChange={(e) => setSortType(e.currentTarget.value)}>\n                <option value=\"sort\">Sort By:</option>\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n            {data.map(item => <Item key={item.id}\n                                    id={item.id}\n                                    imageUrl={item.imageUrl}\n                                    count={item.count}\n                                    name={item.name}\n                                    size={item.size}\n                                    weight={item.weight}\n                                    deleteItem={deleteItem}\n            />)}\n\n            {isAddFormOpen &&\n            <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span onClick={closeModal} className=\"close\">Ã—</span>\n                        <h2>Add Product</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <AddProductReduxForm onSubmit={onSubmit}/>\n                    </div>\n                    <div className='modal-footer'>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    )\n}\n\n\nexport default MainPage","/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/AddProductForm/AddProductForm.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/Redux/items-reducer.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/MainPage/MainPageContainer.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/Header/Header.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPageContainer.tsx",["79"],"import React from 'react'\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {actions} from \"../../Redux/items-reducer\";\nimport AddInfPage from \"./AddInfPage\";\nimport CommentsSection from \"./Comments/CommentSection\";\nimport {AppStateType} from \"../../Redux/redux-store\";\nimport {itemType} from \"../../types/types\";\nimport {AddProductFormValueType} from \"../MainPage/AddProductForm/AddProductForm\";\n\n\n\n\n\ntype mapStateToPropsType = {\n    items:  Array<itemType> ,\n    item: itemType | null\n\n}\ntype ownPropsType = {\n}\ntype mapDispatchType = {\n   setItem: (itemId: number) => void,\n    deleteComment: (id:number,productId: number) => void,\n    addComment:  (data: any) => void,\n    updateItem:  (data:any) => void\n\n}\ntype PropsType = ownPropsType & mapStateToPropsType & mapDispatchType\n\n\nclass AddInfPageContainer extends React.Component<PropsType> {\n\n    getItemId = () => {\n        // @ts-ignore\n        let itemId: number| null = +this.props.match.params.itemId - 1\n        this.props.setItem(itemId)\n    }\n    componentDidMount() {\n        this.getItemId()\n    }\n\n\n    render() {\n        return (\n            <>\n                <div>\n                    {this.props.item &&\n                        <div>\n                            < AddInfPage item={this.props.item} updateItem={this.props.updateItem}/>\n                            <CommentsSection\n                                comments={this.props.item?.comments}\n                                deleteComment={this.props.deleteComment}\n                                addComment={this.props.addComment}\n                            />\n                        </div>\n                    }\n\n\n\n\n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    item: state.itemsPage.item,\n    items: state.itemsPage.items,\n})\n\n\nexport default compose(connect<mapStateToPropsType, mapDispatchType ,ownPropsType, AppStateType>(mapStateToProps, {\n        setItem: actions.setItem,\n        deleteComment: actions.deleteComment,\n        addComment: actions.addComment,\n        updateItem: actions.updateItem\n    }),\n    withRouter)(AddInfPageContainer)\n","/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPage.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/Comments/CommentSection.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/AddInfPaheDataForm.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/components/AdditionalInformationPage/Comments/Comment.tsx",[],"/Users/v.yakovenko/Desktop/max/my-project/src/utils/validators/validators.ts",[],"/Users/v.yakovenko/Desktop/max/my-project/src/Common/formControl/formControl.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":52,"column":8,"nodeType":"86","endLine":52,"endColumn":18,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":10,"endColumn":32},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["94"],"@typescript-eslint/no-unused-vars","'AddProductFormValueType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [items, sortType]",{"range":"97","text":"98"},[1599,1609],"[items, sortType]"]