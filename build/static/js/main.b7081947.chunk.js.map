{"version":3,"sources":["components/AdditionalInformationPage/Comments/CommentsSection.module.css","components/Header/Header.tsx","components/MainPage/Items/Item.tsx","Common/formControl/formControl.tsx","utils/validators/validators.ts","components/MainPage/AddProductForm/AddProductForm.tsx","components/MainPage/MainPage.tsx","Redux/items-reducer.tsx","components/MainPage/MainPageContainer.tsx","components/AdditionalInformationPage/AddInfPaheDataForm.tsx","components/AdditionalInformationPage/AddInfPage.tsx","components/AdditionalInformationPage/Comments/Comment.tsx","components/AdditionalInformationPage/Comments/CommentSection.tsx","components/AdditionalInformationPage/AddInfPageContainer.tsx","App.js","reportWebVitals.js","Redux/redux-store.tsx","index.js","components/AdditionalInformationPage/AddInformation.module.css","components/MainPage/Items/Item.module.css","components/MainPage/MainPage.module.css","Common/formControl/formControl.module.css","components/AdditionalInformationPage/Comments/Comment.module.css"],"names":["module","exports","Header","Item","imageUrl","count","name","id","size","weight","deleteItem","className","s","item","imgBlock","src","alt","valign","itemDescription","addInfLink","to","deleteButton","onClick","window","confirm","confirmDelete","FormControl","meta","touched","error","children","hasError","formControl","Input","props","input","restProps","createField","placeholder","component","validators","text","Field","validate","required","value","numberRequired","isNaN","Number","undefined","AddProductReduxForm","reduxForm","form","handleSubmit","onSubmit","MainPage","items","addItem","useState","data","setData","sortType","setSortType","isAddFormOpen","setIsAddFormOpen","useEffect","type","sortProperty","sorted","sort","a","b","localeCompare","sortArray","addProductButton","selectMode","onChange","e","currentTarget","map","formData","initialState","width","height","comments","productId","description","date","collar","assignObjects","dest","objects","obj","prop","Array","isArray","actions","itemId","setItem","deleteComment","addComment","updateItem","MainPageContainer","this","React","connect","state","itemsPage","AddInfPage","editMode","setEditMode","console","log","itemImg","title","returnButton","Comment","comment","CommentsSection","commentsSection","AddInfPageContainer","getItemId","match","params","Component","compose","withRouter","App","exact","patch","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","action","filter","last","length","updatedState","formReducer","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b7081947.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsSection\":\"CommentsSection_commentsSection__2pVo4\"};","\n\nconst Header = () => {\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default Header\n","\nimport s from './Item.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport * as React from \"react\";\nimport {sizeType} from \"../../../types/types\";\n\ntype ItemPropsType = {\n    imageUrl: string,\n    count: number,\n    name: string,\n    size: sizeType,\n    weight: number,\n    id: number,\n    deleteItem: (id: number) => void\n}\n\n\n\nconst Item: React.FC<ItemPropsType> = ({imageUrl, count, name, size, weight, id, deleteItem}) => {\n\n    const confirmDelete = (id : number) => {\n        let result = window.confirm('Are you sure?')\n        if (result) {\n            deleteItem(id)\n        } else {\n            return null\n        }\n    }\n    return (\n        <div>\n            <div>\n                <table className={s.item}>\n                    <tbody>\n                    <tr>\n                        <td className={s.imgBlock}>\n                            <img src={imageUrl} alt=''/>\n                        </td>\n                        <td valign=\"top\" className={s.itemDescription}>\n                            <div>\n                                name: {name}\n                            </div>\n                            <div>\n                                Description:\n                                {/*<div>*/}\n                                {/*    weight:{weight}*/}\n                                {/*</div>*/}\n                                {/*<div>*/}\n                                {/*    height:{size.height}*/}\n                                {/*</div>*/}\n                                {/*<div>*/}\n                                {/*    width:{size.width}*/}\n                                {/*</div>*/}\n                            </div>\n                            <div>\n                                count: {count}\n                            </div>\n                            <div>\n                                <NavLink className={s.addInfLink} to={'/additionalInformation/' + id}>Additional\n                                    information</NavLink>\n                            </div>\n                        </td>\n                        <td>\n                            <button className={s.deleteButton} onClick={() => confirmDelete(id)}>X</button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default Item","import React from \"react\";\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\nimport {FieldValidatorType} from \"../../utils/validators/validators\";\nimport s from './formControl.module.css'\ntype FormControlParamsType = {\n    meta: WrappedFieldMetaProps\n}\nexport const FormControl: React.FC<FormControlParamsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error\n    return (\n        <div className={s.formControl + ' ' + (hasError ? s.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n    )\n}\n\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} > <input {...input} {...restProps}/></FormControl>\n}\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         component: React.FC<WrappedFieldProps>,\n                                                         validators: Array<FieldValidatorType>,\n                                                         props = {},\n                                                         text = '') {\n    return <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}\n        /> {text}\n    </div>\n}","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = value => {\n    if(value) return undefined;\n    return \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength: number):FieldValidatorType => (value) => {\n    if(value.length > maxLength) return \"Max symbols was reached\"\n    return undefined\n}\nexport const numberRequired = (value: any) => value && isNaN(Number(value)) ? 'Must be a number' : undefined\n","import { InjectedFormProps, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {createField, Input} from \"../../../Common/formControl/formControl\";\nimport {required, numberRequired} from \"../../../utils/validators/validators\";\n\n\ntype AddProductFormOwnProps = {}\n\nconst AddProductForm: React.FC<InjectedFormProps<AddProductFormValueType, AddProductFormOwnProps> & AddProductFormOwnProps> = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Name', 'name', Input, [required])}\n            </div>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Color', 'collar', Input, [required])}\n            </div>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Width', 'width', Input, [required,numberRequired])}\n            </div>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Height', 'height', Input, [required, numberRequired])}\n            </div>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Count', 'count', Input, [required],numberRequired)}\n            </div>\n            <div>\n                {createField<AddProductFormValueTypeKeys>('Weight', 'weight', Input, [required,numberRequired])}\n            </div>\n            <button>Add Product</button>\n        </form>\n    )\n}\n\nexport type AddProductFormValueType = {\n    name: string,\n    collar: string,\n    width: string,\n    height:string,\n    count: number,\n    weight: string,\n}\n\n\n\n\ntype AddProductFormValueTypeKeys = Extract<keyof AddProductFormValueType, string>\n\n// @ts-ignore\nexport const AddProductReduxForm = reduxForm<AddProductFormValueTypeKeys, AddProductFormOwnProps>({form: 'add-product'})(AddProductForm)\n","import Item from \"./Items/Item\";\nimport React, {useEffect, useState} from \"react\";\nimport s from './MainPage.module.css'\nimport './AddProductForm/AddProductForm.css'\nimport {AddProductFormValueType, AddProductReduxForm} from \"./AddProductForm/AddProductForm\";\nimport {itemType} from \"../../types/types\";\n\n\ntype MainPagePropsType = {\n    items: Array<itemType>,\n    deleteItem: (id: number) => void,\n    addItem: (formData: AddProductFormValueType) => void\n}\n\nconst MainPage: React.FC<MainPagePropsType> = ({items, deleteItem, addItem}) => {\n\n    const [data, setData] = useState<Array<itemType>>([])\n    const [sortType, setSortType] = useState<string>('')\n    const [isAddFormOpen, setIsAddFormOpen] = useState<boolean>(false)\n\n    useEffect(() => {\n\n\n        interface IObjectKeys {\n            [key: string]: string\n        }\n\n        interface IDevice extends IObjectKeys {\n            name: string,\n            count: string\n        }\n\n\n        const sortArray = (type: string) => {\n\n            const types: IDevice = {\n                name: 'name',\n                count: 'count'\n            }\n            let sortProperty = types[type]\n            if (sortProperty === 'name') {\n                const sorted = [...items].sort((a, b) => a.name.localeCompare(b.name));\n                setData(sorted)\n            } else if (sortProperty === 'count') {\n                const sorted = [...items].sort((a :any, b:any) => a[sortProperty] - b[sortProperty])\n                setData(sorted)\n            } else {\n                return null\n            }\n        }\n        sortArray(sortType)\n    }, [sortType])\n    useEffect(() => {\n        setData(items)\n    }, [items])\n    const ModalOn = () => {\n        setIsAddFormOpen(true)\n    }\n    const onSubmit = (formData: any) => {\n        addItem(formData)\n        setIsAddFormOpen(false)\n    }\n    const closeModal = () => {\n        setIsAddFormOpen(false)\n    }\n    return (\n        <div>\n            <button className={s.addProductButton} onClick={ModalOn}>Add Product</button>\n            <select className={s.selectMode} onChange={(e) => setSortType(e.currentTarget.value)}>\n                <option value=\"sort\">Sort By:</option>\n                <option value=\"name\">Name</option>\n                <option value=\"count\">Count</option>\n            </select>\n            {data.map(item => <Item key={item.id}\n                                    id={item.id}\n                                    imageUrl={item.imageUrl}\n                                    count={item.count}\n                                    name={item.name}\n                                    size={item.size}\n                                    weight={item.weight}\n                                    deleteItem={deleteItem}\n            />)}\n\n            {isAddFormOpen &&\n            <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span onClick={closeModal} className=\"close\">×</span>\n                        <h2>Add Product</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <AddProductReduxForm onSubmit={onSubmit}/>\n                    </div>\n                    <div className='modal-footer'>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n\n    )\n}\n\n\nexport default MainPage","import {InferActionsType} from \"./redux-store\";\nimport {commentsType, itemType} from \"../types/types\";\n\n\nconst initialState = {\n    items: [{\n        id: 1,\n        imageUrl: 'https://images.unsplash.com/photo-1580910051074-3eb694886505?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8cGhvbmV8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80',\n        name: 'IphoneX',\n        count: 20,\n        size: {\n            width: 200,\n            height: 200\n        },\n        weight: 200,\n        comments: [\n            {\n                id: 1,\n                productId: 1,\n                description: 'some text here1',\n                date: '14:00 22.08.2021'\n            },\n            {\n                id: 2,\n                productId: 1,\n                description: 'some text here2',\n                date: '14:00 22.08.2021'\n            }\n        ] as Array<commentsType>,\n        description: 'The best proposition',\n        collar: 'red'\n    },\n        {\n            id: 2,\n            imageUrl: 'https://images.unsplash.com/photo-1580910051074-3eb694886505?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8cGhvbmV8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80',\n            name: 'IphoneXS',\n            count: 15,\n            size: {\n                width: 200,\n                height: 200\n            },\n            weight: 200,\n            comments: [\n                {\n                    id: 1,\n                    productId: 2,\n                    description: 'some text here',\n                    date: '14:00 22.08.2021'\n                },\n                {\n                    id: 2,\n                    productId: 2,\n                    description: 'some text here',\n                    date: '14:00 22.08.2021'\n                }\n            ] as Array<commentsType>,\n            description: 'The best proposition',\n            collar: 'red'\n        },\n        {\n            id: 3,\n            imageUrl: 'https://images.unsplash.com/photo-1580910051074-3eb694886505?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8cGhvbmV8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80',\n            name: 'Iphone12',\n            count: 30,\n            size: {\n                width: 200,\n                height: 200\n            },\n            weight: 200,\n            comments: [{\n                id: 1,\n                productId: 3,\n                description: 'some text here',\n                date: '14:00 22.08.2021'\n            },\n                {\n                    id: 2,\n                    productId: 3,\n                    description: 'some text here',\n                    date: '14:00 22.08.2021'\n                }] as Array<commentsType>,\n            description: 'The best proposition',\n            collar: 'red'\n        }\n    ] as Array<itemType>,\n    item: null as itemType | null\n}\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\n\nfunction assignObjects(dest: any, ...objects: any) {\n    for (let obj of objects) {\n        if (typeof obj != 'object') continue;\n        for (let prop in obj) {\n            if (Array.isArray(obj[prop])) {\n                dest[prop] = [...obj[prop]]\n            } else if (typeof obj[prop] == 'object') {\n                dest[prop] = assignObjects({}, obj[prop])\n            } else {\n                dest[prop] = obj[prop]\n            }\n        }\n    }\n    return dest;\n}\n\nexport const itemsReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'DELETE_ITEM' :\n            return {\n                ...state,\n                items: state.items.filter(item => item.id !== action.itemId)\n            }\n        case 'ADD_ITEM':\n            let last = state.items.length - 1\n            let item = {\n                id: state.items[last] ? state.items[last].id + 1 : 1,\n                imageUrl: 'https://images.unsplash.com/photo-1580910051074-3eb694886505?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8cGhvbmV8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80',\n                name: action.data.name,\n                count: action.data.count,\n                size: {\n                    width: action.data.width,\n                    height: action.data.height\n                },\n                weight: action.data.weight,\n                comments: [],\n                description: action.data.description,\n                collar: action.data.collar,\n            }\n            return {\n                ...state,\n                items: [...state.items, item]\n            }\n        case 'SET_ITEM':\n            return {\n                ...state,\n                item: state.items[action.id]\n            }\n        case 'UPDATE_ITEM':\n            return {\n                ...state,\n                // items: [...state.items , ...action.data]\n            }\n        case 'ADD_COMMENT':\n\n            return {\n                ...state\n            }\n        case 'DELETE_COMMENT':\n            const updatedState = assignObjects({}, state)\n            updatedState.item.comments = updatedState.item.comments.filter((comment: itemType )=> comment.id !== action.id)\n            return {\n                ...updatedState\n            }\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    deleteItem: (itemId: number) => ({type: 'DELETE_ITEM', itemId} as const),\n    addItem: (data: any) => ({type: 'ADD_ITEM', data} as const),\n    setItem: (id: number) => ({type: 'SET_ITEM', id} as const),\n    deleteComment: (id: number, productId: number) => ({type: 'DELETE_COMMENT', id, productId} as const),\n    addComment: (data: any) => ({type: 'ADD_COMMENT', data} as const),\n    updateItem: (data: any) => ({type: 'UPDATE_ITEM', data} as const)\n}","import * as React from 'react'\nimport {connect} from \"react-redux\";\nimport MainPage from \"./MainPage\";\nimport {actions} from \"../../Redux/items-reducer\";\nimport {AppStateType} from \"../../Redux/redux-store\";\nimport {itemType} from \"../../types/types\";\nimport {AddProductFormValueType} from \"./AddProductForm/AddProductForm\";\n\n\n\ntype mapStateToPropsType = {\n    items:  Array<itemType>\n}\ntype ownPropsType = {\n}\ntype mapDispatchType = {\n    deleteItem: (id:number) => void,\n    addItem: (formData:AddProductFormValueType) => void\n}\ntype PropsType = ownPropsType & mapStateToPropsType & mapDispatchType\n\nclass MainPageContainer extends React.Component<PropsType> {\n\n    render() {\n       return (\n           <div>\n            <MainPage items={this.props.items} deleteItem={this.props.deleteItem} addItem={this.props.addItem}/>\n           </div>\n       )\n    }\n}\nconst mapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    items: state.itemsPage.items\n})\n\nexport default connect<mapStateToPropsType, mapDispatchType ,ownPropsType, AppStateType>(mapStateToProps,{deleteItem: actions.deleteItem, addItem: actions.addItem})(MainPageContainer)","import { InjectedFormProps, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {AddProductFormValueType} from \"../MainPage/AddProductForm/AddProductForm\";\nimport {createField, Input} from \"../../Common/formControl/formControl\";\nimport {numberRequired, required} from \"../../utils/validators/validators\";\n\n\ntype AddInformationFormOwnProps = {}\n\n\nconst AddInfPaheDataForm: React.FC<InjectedFormProps<AddProductFormValueType, AddInformationFormOwnProps> & AddInformationFormOwnProps> = ({handleSubmit}) => {\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Name', 'name', Input, [required])}\n                </div>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Color', 'collar', Input, [required])}\n                </div>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Width', 'width', Input, [required,numberRequired])}\n                </div>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Height', 'height', Input, [required, numberRequired])}\n                </div>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Count', 'count', Input, [required],numberRequired)}\n                </div>\n                <div>\n                    {createField<AddInformationFormValueTypeKeys>('Weight', 'weight', Input, [required,numberRequired])}\n                </div>\n                <button>Save</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport type AddInformationFormValueType = {\n    name: string,\n    collar: string,\n    width: string,\n    height:string,\n    count: number,\n    weight: string,\n}\n\n\ntype AddInformationFormValueTypeKeys = Extract<keyof AddInformationFormValueType, string>\n\n\n// @ts-ignore\nexport const AddProductReduxForm = reduxForm<AddInformationFormValueTypeKeys,AddInformationFormOwnProps>({form: 'edit-product'})(AddInfPaheDataForm)\n","import s from './AddInformation.module.css'\nimport '../MainPage/AddProductForm/AddProductForm.css'\nimport {NavLink} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {AddProductReduxForm} from \"./AddInfPaheDataForm\";\nimport {itemType} from \"../../types/types\";\n\ntype propsType = {\n    item: itemType,\n    updateItem: (formData: any) => void\n}\n\nconst AddInfPage: React.FC<propsType> = ({item,updateItem}) => {\n    const [editMode, setEditMode] = useState(false)\n    const ModalOn = () => {\n        setEditMode(true)\n    }\n    const onSubmit = (formData: any) => {\n        updateItem(formData)\n        console.log(formData)\n        setEditMode(false)\n    }\n    const closeModal = () => {\n        setEditMode(false)\n    }\n    return (\n        <div>\n            <button onClick={ModalOn}>Edit</button>\n            {editMode && <div className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span onClick={closeModal} className=\"close\">×</span>\n                        <h2>Edit Product</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <AddProductReduxForm onSubmit={onSubmit}/>\n                    </div>\n                    <div className='modal-footer'>\n                    </div>\n                </div>\n            </div>\n            }\n\n            <table className={s.item}>\n                <tbody>\n                <tr>\n                    <td className={s.imgBlock}>\n                        <img className={s.itemImg} src={item.imageUrl} alt=''/>\n                    </td>\n                    <td valign=\"top\" className={s.itemDescription}>\n                        <div className={s.title}>\n                            {item.name}\n                        </div>\n                        <div>\n                            Description:\n                            <div>\n                                Weight:{item.weight}\n                            </div>\n                            <div>\n                                Height:{item.size.height}\n                            </div>\n                            <div>\n                                Width:{item.size.width}\n                            </div>\n                        </div>\n                        <div>\n                            Count: {item.count}\n                        </div>\n\n                        <div>\n                            Collar: {item.collar}\n                        </div>\n                        <div>\n                            <NavLink className={s.returnButton} to={'/mainPage'}>Return</NavLink>\n                        </div>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n    )\n}\n\nexport default AddInfPage","import React from \"react\";\nimport s from './Comment.module.css'\n\ntype PropsType = {\n    deleteComment: (id:number,productId: number) => void,\n    addComment:  (data: any) => void,\n    description: string,\n    id: number,\n    productId: number\n}\n\nconst Comment: React.FC<PropsType> = ({description,deleteComment,id,productId, addComment}) => {\n    return (\n        <div className={s.comment}>\n            {description}\n\n            <button className={s.deleteButton} onClick={() =>deleteComment(id ,productId)}>X</button>\n        </div>\n    )\n}\n\nexport default Comment","import React from \"react\";\nimport Comment from \"./Comment\";\nimport s from './CommentsSection.module.css'\nimport {commentsType} from \"../../../types/types\";\n\n\ntype PropsType = {\n    comments: Array<commentsType>,\n    deleteComment: (id:number,productId: number) => void,\n    addComment:  (data: any) => void,\n}\n\nconst CommentsSection: React.FC<PropsType> = ({comments, deleteComment, addComment}) => {\n    return(\n            <div className={ s.commentsSection}>\n                Comment Section:\n                <div>\n                    {comments?.map( comment => <Comment\n                        key={comment.id}\n                        id={comment.id}\n                        productId={comment.productId}\n                        deleteComment={deleteComment}\n                        description={comment.description}\n                        addComment={addComment}\n                    /> )}\n                </div>\n            </div>\n    )\n}\nexport default CommentsSection","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {actions} from \"../../Redux/items-reducer\";\nimport AddInfPage from \"./AddInfPage\";\nimport CommentsSection from \"./Comments/CommentSection\";\nimport {AppStateType} from \"../../Redux/redux-store\";\nimport {itemType} from \"../../types/types\";\nimport {AddProductFormValueType} from \"../MainPage/AddProductForm/AddProductForm\";\n\n\n\n\n\ntype mapStateToPropsType = {\n    items:  Array<itemType> ,\n    item: itemType | null\n\n}\ntype ownPropsType = {\n}\ntype mapDispatchType = {\n   setItem: (itemId: number) => void,\n    deleteComment: (id:number,productId: number) => void,\n    addComment:  (data: any) => void,\n    updateItem:  (data:any) => void\n\n}\ntype PropsType = ownPropsType & mapStateToPropsType & mapDispatchType\n\n\nclass AddInfPageContainer extends React.Component<PropsType> {\n\n    getItemId = () => {\n        // @ts-ignore\n        let itemId: number| null = +this.props.match.params.itemId - 1\n        this.props.setItem(itemId)\n    }\n    componentDidMount() {\n        this.getItemId()\n    }\n\n\n    render() {\n        return (\n            <>\n                <div>\n                    {this.props.item &&\n                        <div>\n                            < AddInfPage item={this.props.item} updateItem={this.props.updateItem}/>\n                            <CommentsSection\n                                comments={this.props.item?.comments}\n                                deleteComment={this.props.deleteComment}\n                                addComment={this.props.addComment}\n                            />\n                        </div>\n                    }\n\n\n\n\n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    item: state.itemsPage.item,\n    items: state.itemsPage.items,\n})\n\n\nexport default compose(connect<mapStateToPropsType, mapDispatchType ,ownPropsType, AppStateType>(mapStateToProps, {\n        setItem: actions.setItem,\n        deleteComment: actions.deleteComment,\n        addComment: actions.addComment,\n        updateItem: actions.updateItem\n    }),\n    withRouter)(AddInfPageContainer)\n","import './App.css';\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport MainPageContainer from \"./components/MainPage/MainPageContainer\";\nimport AddInformationContainer from \"./components/AdditionalInformationPage/AddInfPageContainer\";\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <div className='AppHeader'>\n                    <Header/>\n                </div>\n                <div>\n                    <Route exact patch='/' render={() => <Redirect to={'/mainPage'} />} />\n                    <Route path='/additionalInformation/:itemId' render={() => <AddInformationContainer />}/>\n                    <Route path='/mainPage' render={() => <MainPageContainer />}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\nimport {itemsReducer} from \"./items-reducer\";\nimport {reducer as formReducer} from 'redux-form'\n\nlet RootReducer = combineReducers({\n        itemsPage: itemsReducer,\n        form: formReducer\n})\n\n\ntype RootReducerType = typeof RootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsType<T> = T extends {[key: string]: (...arg:any[]) => infer U} ? U : never\n\nlet store = createStore(RootReducer)\n\n\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\n        <Provider store={store}>\n            <App/>\n        </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemImg\":\"AddInformation_itemImg__1cOCb\",\"itemDescription\":\"AddInformation_itemDescription__1o5Ca\",\"imgBlock\":\"AddInformation_imgBlock__36ASj\",\"item\":\"AddInformation_item__11Ilb\",\"title\":\"AddInformation_title__RXKCE\",\"addProductButton\":\"AddInformation_addProductButton__3lros\",\"returnButton\":\"AddInformation_returnButton__1qXFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__eRYhv\",\"itemDescription\":\"Item_itemDescription__v4n_V\",\"imgBlock\":\"Item_imgBlock__2MiwP\",\"addInfLink\":\"Item_addInfLink__fvUyD\",\"deleteButton\":\"Item_deleteButton__3vmFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"MainPage_items__vhF1f\",\"selectMode\":\"MainPage_selectMode__fCm_A\",\"addProductButton\":\"MainPage_addProductButton__4Hhs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControl_formControl__2Hd7s\",\"error\":\"formControl_error__1PjJh\",\"formSummaryError\":\"formControl_formSummaryError__1uxrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__3y-I4\",\"deleteButton\":\"Comment_deleteButton__BU4fq\"};"],"sourceRoot":""}